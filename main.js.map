{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/all.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AllService } from '../all.service'\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  regForm:FormGroup;\n  constructor(private _fb:FormBuilder,private _ser:AllService) { }\n\n  ngOnInit(): void {\n    this.regForm = this._fb.group({\n      name:['',[Validators.required,Validators.maxLength(10)]],\n      mobile:['',[Validators.required,Validators.pattern('[0-9]{10}')]],\n      email:['',Validators.required],\n      password:['',Validators.required]\n    })\n  }\n\n\n  register(data){\n    this._ser.saveUser(data).subscribe((res)=>{\n      console.log(\"Response \",res)\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-4 offset-4 \">\n                <form class=\"form\" [formGroup]=\"regForm\" (ngSubmit)=\"register(regForm.value)\">\n                    <h2 class=\"\">Register Form</h2>\n                    <hr>\n                    <div class=\"form-group\">\n                        <label>Full Name<span style=\"color:red\" *ngIf=\"regForm.controls['name'].hasError('required') && (regForm.controls['name'].touched || regForm.controls['name'].dirty)\">*</span>\n                        </label>\n                        <input [formControl]=\"regForm.controls['name']\"\n                        type=\"text\" class=\"char form-control\" name=\"name\" required placeholder=\"Full Name\">\n                        <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['name'].hasError('required') && (regForm.controls['name'].touched || regForm.controls['name'].dirty)\">This field is required</div>\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Mobile</label>\n                        <input [formControl]=\"regForm.controls['mobile']\"\n                         type=\"text\" required class=\"mobile form-control\" name=\"mobile\" placeholder=\"Mobile\">\n                         <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['mobile'].hasError('required') && (regForm.controls['mobile'].touched || regForm.controls['mobile'].dirty)\">This field is required</div>\n                         <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['mobile'].hasError('pattern') && (regForm.controls['mobile'].touched || regForm.controls['mobile'].dirty)\">This invalide mobile number</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input type=\"email\" [formControl]=\"regForm.controls['email']\"\n                         required class=\"email form-control\" name=\"email\" placeholder=\"Email\">\n                         <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['email'].hasError('required') && (regForm.controls['email'].touched || regForm.controls['email'].dirty)\">This field is required</div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        \n                            <input type=\"password\" [formControl]=\"regForm.controls['password']\"\n                            required class=\"password form-control\" name=\"password\"\n                                placeholder=\"Password\">\n                                <div class=\"alert alert-danger\" *ngIf=\"regForm.controls['password'].hasError('required') && (regForm.controls['password'].touched || regForm.controls['password'].dirty)\">This field is required</div>\n                           \n                       \n                    </div>\n                    <div class=\"form-group float-right\">\n                        <button class=\"btn btn-danger\" type=\"reset\">Cancel</button> &nbsp;&nbsp;&nbsp;\n                        <button class=\"btn btn-success\" type=\"submit\">Register</button>\n                    </div>\n                    <!-- <button class=\"toggel\">Click</button> -->\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","<table class=\"table table-stripped\">\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Mobile</th>\n            <th>Action</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user['name']}}</td>\n            <td>{{user['email']}}</td>\n            <td>{{user['mobile']}}</td>\n            <td>\n                <a [routerLink]=\"['/edit',user['_id']]\" class=\"btn btn-success\">E</a>&nbsp;&nbsp;\n                <button class=\"btn btn-danger\" (click)=\"deleteUser(user['_id'])\">D</button>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { AllService } from '../all.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  users:any = [];\n  constructor(private _ser:AllService) { }\n\n  ngOnInit(): void {\n    this._ser.getUser().subscribe((res)=>{\n      this.users = res;\n    },\n    (error)=>{\n      console.error(\"Error \",error.message)\n    },)\n  }\n\n  deleteUser(id){\n    this._ser.deleteUser(id).subscribe((res)=>{\n      console.log(\"User deleted\")\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AllService } from '../all.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  editForm: any;\n  constructor(private _ser: AllService, private _fb: FormBuilder, private _ar: ActivatedRoute) {\n    this.editForm = this._fb.group({\n      id: [],\n      name: ['', [Validators.required, Validators.maxLength(10)]],\n      mobile: ['', [Validators.required, Validators.pattern('[0-9]{10}')]],\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    this._ser.getOneuser(this._ar.snapshot.params.id).subscribe((res) => {\n      this.editForm.patchValue(res)\n      this.editForm.controls['id'].patchValue(res['_id'])\n    });\n  }\n\n  update(data) {\n    this._ser.updateUser(data).subscribe((res) => {\n      console.log(\"Updated\", res)\n    });\n\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-4 offset-4 \">\n                <form class=\"form\" [formGroup]=\"editForm\" (ngSubmit)=\"update(editForm.value)\">\n                    <h2 class=\"\">Update Form</h2>\n                    <hr>\n                    <input type=\"hidden\" name=\"id\" [formControl]=\"editForm.controls['id']\">\n                    <div class=\"form-group\">\n                        <label>Full Name</label>\n                        <input [formControl]=\"editForm.controls['name']\"\n                        type=\"text\" class=\"char form-control\" name=\"name\" required placeholder=\"Full Name\">\n\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Mobile</label>\n                        <input [formControl]=\"editForm.controls['mobile']\"\n                         type=\"text\" required class=\"mobile form-control\"  name=\"mobile\" placeholder=\"Mobile\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Email</label>\n                        <input type=\"email\" [formControl]=\"editForm.controls['email']\"\n                         required class=\"email form-control\" name=\"email\" placeholder=\"Email\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Password</label>\n                        \n                            <input type=\"password\" [formControl]=\"editForm.controls['password']\"\n                            required class=\"password form-control\" name=\"password\"\n                                placeholder=\"Password\">\n                           \n                       \n                    </div>\n                    <div class=\"form-group float-right\">\n                        <button class=\"btn btn-danger\" type=\"reset\">Cancel</button> &nbsp;&nbsp;&nbsp;\n                        <button class=\"btn btn-success\" type=\"submit\">Update</button>\n                    </div>\n                    <!-- <button class=\"toggel\">Click</button> -->\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clinet';\n  register = 'register'\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['login']\">Login</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"register\">Register</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n            <li><hr class=\"dropdown-divider\"></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n          </ul>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n        </li>\n      </ul>\n      <form class=\"d-flex\">\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n</nav>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { map } from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllService {\n\n  constructor(private _http: HttpClient) { }\n\n  saveUser(data) {\n    return this._http.post('http://localhost:3000/users', data).pipe(map((res) => {\n      return res;\n    }))\n  }\n\n  getUser() {\n    return this._http.get('http://localhost:3000/users').pipe(map((res) => {\n      return res;\n    }))\n  }\n\n  deleteUser(id) {\n    return this._http.delete('http://localhost:3000/users/' + id).pipe(map((res) => {\n      return res;\n    }))\n  }\n\n  getOneuser(id) {\n    return this._http.get('http://localhost:3000/users/' + id).pipe(map((res) => {\n      return res;\n    }))\n  }\n\n  updateUser(data) {\n    return this._http.put(\"http://localhost:3000/users\", data).pipe(map((res) => {\n      return res;\n    }))\n  }\n\n\n  handleError(error) {\n    console.error(\"Error -- \", error)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path:'login',component:LoginComponent},\n  {path:'register',component:RegisterComponent},\n  {path:'edit/:id',component:EditComponent},\n  {path:'',component:HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>login works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}